%YAML 1.2
---
name: Handlebars2
file_extensions:
  - hbs
  - handlebars
scope: source.handlebars

variables:
  block_tags: 'if|unless|each|with'
  block_tags2: 'else(\sif)?'

  specials: 'this|@key|@index|@last|@first'

  builtin_fn: 'lookup|log'
  unnamed_arg: '@?[-a-zA-Z0-9_\./"]+\s?'
  named_arg: '[-a-zA-Z0-9_\./]+'


contexts:
  main:
    - match: ""
      push: "Packages/HTML/HTML.sublime-syntax"
      with_prototype:
        - include: comments
        - include: illegal_blocks

        - match: '{{'
          push: handlebars_tags
          scope: punctuation.section.braces.start.handlebars

  handlebars_tags:
    - match: '"'
      scope: punctuation.definition.string.begin.handlebars
      push: double_quoted_string

    - match: "'"
      scope: punctuation.definition.string.begin.handlebars
      push: single_quoted_string

    - match: '{{block_tags2}}'
      captures:
        0: keyword.control.handlebars

    - match: '(#)({{block_tags}})'
      captures:
        2: keyword.control.handlebars


    - match: '(/)({{block_tags}})'
      captures:
        2: keyword.control.handlebars


    - match: '{{specials}}'
      scope: support.constant.handlebars

    - match: '({{named_arg}})(\s?+=\s?+)({{unnamed_arg}})'
      captures:
        0: variable.language.arguments.named.handlebars
        1: variable.parameter.handlebars
        2: entity.other.attribute-name.handlebars
        3: meta.function.inline.other.handlebars

    - match: \b(@?[-a-zA-Z0-9_\./]+)
      scope: meta.embedded.line.handlebars
      captures:
        1: variable.parameter.handlebars

    - match: '}}'
      scope: punctuation.section.braces.end.handlebars
      pop: true

  comments:
    - match: '{{!'
      scope: punctuation.definition.comment.begin.handlebars
      push:
        - meta_scope: comment.block.handlebars
        - match: '}}'
          scope: punctuation.definition.comment.end.handlebars
          pop: true
    - match: '{{\s+!'
      scope: invalid.illegal.bad-comments-or-CDATA.handlebars
      push:
        - meta_scope: invalid.illegal.bad-comments-or-CDATA.handlebars
        - match: '}}'
          scope: punctuation.definition.comment.end.handlebars
          pop: true

  illegal_blocks:
    - match: '{{\s?#\s+'
      scope: invalid.illegal.bad-spacing.handlebars
      push:
        - meta_scope: invalid.illegal.bad-spacing.handlebars
        - match: '}}'
          scope: punctuation.section.braces.end.handlebars
          pop: true

  double_quoted_string:
    - meta_scope: string.quoted.double.handlebars
    - match: \\.
      scope: string.quoted.double.handlebars

    - match: '"'
      scope: punctuation.definition.string.end.handlebars
      pop: true

  single_quoted_string:
    - meta_scope: string.quoted.single.handlebars
    - match: \\.
      scope: string.quoted.single.handlebars

    - match: "'"
      scope: punctuation.definition.string.end.handlebars
      pop: true
